/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 ./tesla.glb -t -f 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Plane001: THREE.Mesh;
    Plane: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube025: THREE.Mesh;
    Cube025_1: THREE.Mesh;
    Cube025_2: THREE.Mesh;
    Cube025_3: THREE.Mesh;
    Cube025_4: THREE.Mesh;
    Cube025_5: THREE.Mesh;
    Circle002: THREE.Mesh;
  };
  materials: {
    ['Material.004']: THREE.MeshStandardMaterial;
    ['Material.005']: THREE.MeshStandardMaterial;
    ['Material.002']: THREE.MeshStandardMaterial;
    ['Material.001']: THREE.MeshStandardMaterial;
    Window: THREE.MeshStandardMaterial;
    ['Material.003']: THREE.MeshStandardMaterial;
    ['Material.006']: THREE.MeshStandardMaterial;
    ['Material.007']: THREE.MeshStandardMaterial;
    ['Material.008']: THREE.MeshStandardMaterial;
    ['Material.009']: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/tesla.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Plane001.geometry}
        material={materials['Material.004']}
        position={[-1.399, 0.358, 0]}
      />
      <mesh
        geometry={nodes.Plane.geometry}
        material={materials['Material.005']}
        position={[-0.334, 0.331, 0]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={materials['Material.005']}
        position={[-0.054, 0.252, 0]}
      />
      <mesh
        geometry={nodes.Cube002.geometry}
        material={materials['Material.002']}
        position={[0.986, 0.81, 0]}
      />
      <group position={[-0.077, 0.605, 0.372]}>
        <mesh
          geometry={nodes.Cube025.geometry}
          material={materials['Material.001']}
        />
        <mesh geometry={nodes.Cube025_1.geometry} material={materials.Window} />
        <mesh
          geometry={nodes.Cube025_2.geometry}
          material={materials['Material.003']}
        />
        <mesh
          geometry={nodes.Cube025_3.geometry}
          material={materials['Material.006']}
        />
        <mesh
          geometry={nodes.Cube025_4.geometry}
          material={materials['Material.007']}
        />
        <mesh
          geometry={nodes.Cube025_5.geometry}
          material={materials['Material.008']}
        />
      </group>
      <mesh
        geometry={nodes.Circle002.geometry}
        material={materials['Material.009']}
        position={[-0.052, 0.251, 0]}
      />
    </group>
  );
}

useGLTF.preload('/tesla.glb');
